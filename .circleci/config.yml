# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/repo
    docker:
    - image: circleci/android:api-26-alpha
    environment:
      JVM_OPTS: -Xmx3200m
      CIRCLE_TEST_REPORTS: /tmp/movie/circleci-test-results
    steps:
    - checkout
    - restore_cache:
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    #      - run:
    #         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
    #         command: sudo chmod +x ./gradlew

    - run:
        name: "Setup custom environment variables"
        command:
          echo '# Local properties file' > private.properties ;
          echo 'TMDB_API_KEY="'$TMDB_API_KEY'"' >> private.properties;
          echo 'sdk.dir="'$ANDROID_HOME'"' >> private.properties
    # Prepare for artifact and test results  collection equivalent to how it was done on 1.0.
    # In many cases you can simplify this from what is generated here.
    # 'See docs on artifact collection here https://circleci.com/docs/2.0/artifacts/'
    - run:
        name: Create output test directories
        command: mkdir -p $CIRCLE_TEST_REPORTS
    - run:
        name: Download Dependencies
        command: ./gradlew androidDependencies
    - save_cache:
        paths:
        - ~/.gradle
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    - run:
        name: Run Tests
        command: ./gradlew lint test
    - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
        path: app/build/reports
        destination: reports
    - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
        path: app/build/test-results
    # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
    - run:
        name: Build debug APK and release APK
        command: |
          ./gradlew :app:assembleDebug
          ./gradlew :app:assembleDebugAndroidTest
    - run:
        name: Authorize gcloud and set config defaults
        command: |
                   echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
                   gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
                   gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
    - run:
        name: Test with Firebase Test Lab
        command: >
          gcloud firebase test android run --app app/build/outputs/apk/debug/app-debug.apk --test app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk
    - run:
        name: Install gsutil dependency and copy test results data
        command: |
          gsutil -m cp -r -U `gsutil ls ${GCS_RESUTLS_URL} | tail -1` ${CIRCLE_TEST_REPORTS}/ | true


